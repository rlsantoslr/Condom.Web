@page "/dashboard"
@using Condom.Infra.App;
@using Condom.Infra.Helpers;
@using Condom.Views.Models;
@attribute [Authorize]
<div class="row">
    <div class="col-lg-3 pb-3">
        <div class="card mx-auto w-100 h-100">
            <div class="card-body text-center mt-5" style="background-color: transparent;">
                <h5 class="card-title fw-bold">Deseja criar um novo grupo?</h5>
                <p class="card-text ">Administre um novo grupo ou condomínio</p>
                <a href="/group/new" class="btn btn-dark btn-rounded w-50">Sim, criar um novo</a>
                <br />
                <br />
            </div>
        </div>
    </div>
    @foreach (var group in Data)
    {
        <div class="col-lg-3 pb-3">
            <div class="card mx-auto w-100 h-100">
                <div class="card-body text-center card-groups-info bg-secondary">
                    <h5 class="card-title text-white fw-bold">@group.Domain.Name</h5>
                    <p class="card-text text-white">@(Tools.GetEnumDisplay(group.Domain.Type))</p>
                    <a href="/group" class="btn btn-dark btn-rounded w-50">Acessar</a>
                </div>
                <img src="@group.Domain.ImageURL" class="card-img-top card-groups-img" alt="...">
            </div>
        </div>
    }
</div>
@inject GroupsApp _GroupApp
@code {
    protected List<GroupsView> Data { get; set; } = new List<GroupsView>();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            Data = await _GroupApp.GetGroups(_Session.GetUserId());
            await InvokeAsync(StateHasChanged);
        }
    }
}
